contract CrowdFunding{
    
    struct Campaign{
        
        uint startTime;
        uint duration;
        address owner;
        uint target;
        mapping (address => uint) ledger;
        uint totalCollected;
    }
    
    bool public isCampaignActive;
    Campaign public campaign;
    address chairperson;
    
    // Constructor - called when contract created
    function CrowdFunding(uint campaignDuration, uint campaignTarget, address campaignOwner){
        
        campaign.startTime = now;
        campaign.duration = campaignDuration;
        campaign.owner = campaignOwner;
        campaign.target = campaignTarget;
        isCampaignActive = true;
        chairperson = msg.sender;
    }
    
    // Call this function to fund campaign
    function fundCampaign()
    {
        if(!isCampaignActive)
        {
            throw;
        }
        
        if(now > campaign.startTime + campaign.duration)
        {
            throw;
        }
        
        campaign.ledger[msg.sender] += msg.value;
        campaign.totalCollected += msg.value;
    }
    
    // Only chairperson can call this functoion - to check if the target is reached
    function checkIfTargetReached()
    {
        if(msg.sender != chairperson){
            
            throw;
        }
        
         if(now < campaign.startTime + campaign.duration)
        {
            throw;
        }
        
        if(!isCampaignActive)
        {
            throw;
        }
        
        if(campaign.totalCollected >= campaign.target)
        {
            if(!campaign.owner.send(campaign.totalCollected))
            {
                throw;
            }else{
                
                isCampaignActive = false;
            }
        }
    }
    
}
